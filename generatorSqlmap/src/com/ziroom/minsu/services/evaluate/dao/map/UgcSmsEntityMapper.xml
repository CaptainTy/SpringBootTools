<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ziroom.minsu.services.evaluate.dao.map.UgcSmsEntityMapper" >
  <resultMap id="BaseResultMap" type="com.ziroom.minsu.entity.evaluate.UgcSmsEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fid" property="fid" jdbcType="VARCHAR" />
    <result column="impress_fid" property="impressFid" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="code_address" property="codeAddress" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fid, impress_fid, mobile, content, code_address, create_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_ugc_sms
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_ugc_sms
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ziroom.minsu.entity.evaluate.UgcSmsEntity" >
    insert into t_ugc_sms (id, fid, impress_fid, 
      mobile, content, code_address, 
      create_date)
    values (#{id,jdbcType=INTEGER}, #{fid,jdbcType=VARCHAR}, #{impressFid,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{codeAddress,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ziroom.minsu.entity.evaluate.UgcSmsEntity" >
    insert into t_ugc_sms
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fid != null" >
        fid,
      </if>
      <if test="impressFid != null" >
        impress_fid,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="codeAddress != null" >
        code_address,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=VARCHAR},
      </if>
      <if test="impressFid != null" >
        #{impressFid,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="codeAddress != null" >
        #{codeAddress,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ziroom.minsu.entity.evaluate.UgcSmsEntity" >
    update t_ugc_sms
    <set >
      <if test="fid != null" >
        fid = #{fid,jdbcType=VARCHAR},
      </if>
      <if test="impressFid != null" >
        impress_fid = #{impressFid,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="codeAddress != null" >
        code_address = #{codeAddress,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ziroom.minsu.entity.evaluate.UgcSmsEntity" >
    update t_ugc_sms
    set fid = #{fid,jdbcType=VARCHAR},
      impress_fid = #{impressFid,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      code_address = #{codeAddress,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>